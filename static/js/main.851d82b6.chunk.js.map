{"version":3,"sources":["Redux/Reducers/Search.js","Components/NavBar/Search/Input.js","Components/UI/StarRating.js","Components/NavBar/Search/StarRating.js","Components/NavBar/Search/Search.js","Components/NavBar/NavBar.js","Components/Banner/Banner.js","Redux/Reducers/Movies.js","Components/Movies/Card/Card.js","Components/Movies/ListMovie.js","Components/Main.js","reportWebVitals.js","Redux/Reducers/index.js","Redux/Sagas/Requests/Movies.js","Redux/Sagas/Handlers/Movies.js","Redux/Sagas/WatcherGetMovies.js","Redux/Sagas/WatcherSaga.js","Redux/Store.js","index.js"],"names":["ON_CHANGE_INPUT","ON_CHANGE_RATING","initialState","search","inputVal","ratingVal","Input","useSelector","state","Search","dispatch","useDispatch","HandleChange","val","type","ONChangeInput","Form","inline","className","Control","value","onChange","e","target","placeholder","props","name","starCount","ratingSer","emptyStarColor","onStarClick","Ratingt","nextValue","NavBar","Navbar","expand","Container","Brand","href","App","fluid","Row","Col","md","lg","xl","GET_MOVIES_REQUESTED","GET_MOVIES_SUCCESS","GET_MOVIES_FAILED","movies","looding","error","CardMovie","el","Card","Img","src","Poster","alt","Released","Genre","Actors","Awards","Title","rating","Movies","loading","useState","movieFil","setmovieFil","useEffect","filterMovie","filter","toLowerCase","length","map","sm","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","requestGetMovies","params","axios","request","method","url","handleGetMovies","call","response","data","put","message","WatcherGetMovies","takeLatest","watcherSaga","all","SagaMiddelware","createSagaMiddleware","MiddleWare","store","compose","applyMiddleware","createStore","run","ReactDOM","render","StrictMode","Store","document","getElementById"],"mappings":"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","file":"static/js/main.851d82b6.chunk.js","sourcesContent":["export const GET_SEARCH = \"GET_SEARCH\";\nconst ON_CHANGE_INPUT = \"ON_CHANGE_INPUT\";\nconst ON_CHANGE_RATING = \"ON_CHANGE_RATING\";\n\n\nexport const getSearch = () => ({\n  type: GET_SEARCH\n});\n\nexport const ONChangeInput = (val) => ({\n  type: ON_CHANGE_INPUT,\n  val\n  \n});\n\nexport const ONChangeRating = (val) => ({\n  type: ON_CHANGE_RATING,\n  val\n  \n});\n\nconst initialState = {search:{inputVal:\"\",ratingVal:3}};\n\nexport default function Search (state = initialState, action) {\n  switch (action.type) {\n    case ON_CHANGE_INPUT:\n    return {...state,search:{inputVal:action.val,ratingVal:state.search.ratingVal}}\n    case ON_CHANGE_RATING:\n    return {...state,search:{inputVal:state.search.inputVal,ratingVal:action.val}}\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport {Form } from 'react-bootstrap';\nimport {useSelector,useDispatch } from \"react-redux\"\nimport { ONChangeInput } from '../../../Redux/Reducers/Search';\n\n\n\nexport default function Input() {\n\nconst inputVal = useSelector(state => state.Search.search.inputVal)\nconst dispatch = useDispatch()\n\nconst HandleChange=(val)=>{ dispatch(ONChangeInput(val))}\n\n  return (\n \n    <Form inline className=\" bg-white position-relative\">\n      <Form.Control type=\"text\" value={inputVal} \n      onChange={(e)=>HandleChange(e.target.value)} \n      className=\"position-relative border-0 input-search\" \n      placeholder=\"I'm looking for...\"/>\n      <i className=\"ei ei-icon_search position-absolute\"></i>\n\n    </Form>\n \n  )\n}","import React from 'react';\nimport StarRatingComponent from 'react-star-rating-component';\n\nexport default function Input(props) {\n\n\n  return (\n     \n    <StarRatingComponent \n          name=\"rate1\" \n          starCount={5}\n          value={props.ratingSer}\n          emptyStarColor={\"white\"} \n          onStarClick={props.onStarClick}\n     />\n  )\n}","import React from 'react';\nimport {useSelector,useDispatch } from \"react-redux\"\nimport StarRating from '../../UI/StarRating'\nimport { ONChangeRating} from '../../../Redux/Reducers/Search';\n\n\nexport default function Ratingt() {\nconst ratingVal = useSelector(state => state.Search.search.ratingVal)\n\nconst dispatch = useDispatch()\n \n\n  return (\n     \n    <StarRating\n          ratingSer={ratingVal}\n          onStarClick={(nextValue)=>{dispatch(ONChangeRating(nextValue));\n        \n           \n          \n          }}\n  />\n  )\n\n}","import React from 'react'\nimport Input from \"./Input\"\nimport StarRating from \"./StarRating\"\n\nexport default function Search() {\n \n   \n    return (\n        <div className=\"ml-md-auto d-flex\">\n           <StarRating />\n           <Input />  \n \n\n        </div>\n    )\n}\n","import React  from 'react';\nimport { Navbar,Container } from 'react-bootstrap';\nimport Search from \"./Search/Search\"\nexport default function NavBar() {\n\n\n  return (\n<Navbar  className=\"Navbar pt-4 pb-3 position-fixed w-100 \" expand=\"md\">\n<Container>\n  <Navbar.Brand href=\"#home\" className=\"text-white\"><h2 className=\"logo\">Movies App</h2></Navbar.Brand>\n <Search />\n</Container>\n</Navbar>\n  )\n}","import React from 'react';\nimport { Container,Row,Col } from 'react-bootstrap';\n\nexport default function App() {\n\n\n  return (\n\n    <section className=\"Banner text-white\">\n<Container fluid className=\"h-100\" >\n    <Row className=\"h-100 w-100 row justify-content-center align-items-center \" >\n        <Col md={8} lg={10} xl={9} className=\"pr-0\">\n            <small>MOVIES</small>\n            <h3>The list below will provide you </h3>\n            <p>with the best movies for all your viewing needs.</p>\n          \n        </Col>\n    </Row>\n</Container>\n\n</section>\n\n  )\n}","export const GET_MOVIES_REQUESTED = \"GET_MOVIES_REQUESTED\";\nexport const GET_MOVIES_SUCCESS = \"GET_MOVIES_SUCCESS\";\nexport const GET_MOVIES_FAILED =\"GET_MOVIES_FAILED\"\n\nexport const getMovies = () => ({\n  type: GET_MOVIES_REQUESTED\n});\n\nexport const SetMoviesSuccess = (movies) => ({\n  type: GET_MOVIES_SUCCESS,\n  movies\n});\n \nexport const getMoviesFailed = (error) => ({\n  type: GET_MOVIES_FAILED,\n  error\n});\n\nconst initialState = {\n  movies:[],\n  looding:false,\n  error: null,\n};\n\nexport default function Movies (state = initialState, action) {\n  switch (action.type) {\n\n    case GET_MOVIES_REQUESTED:\n    \n    return {\n    ...state,\n    loading: true,\n    }\n    case GET_MOVIES_SUCCESS:\n    \n        return {\n        ...state,\n        loading: false,\n        movies: action.movies\n      }\n      case GET_MOVIES_FAILED:\n\n        return {\n        ...state,\n        loading: false,\n        error: action.error,\n      }\n\n      default:\n      return state;\n  }\n};\n\n","import React from 'react';\nimport { Card } from 'react-bootstrap';\nimport StarRating from '../../UI/StarRating'\n\nexport default function CardMovie(props) {\nconst {el}=props\n\n  return (\n    <Card className=\" card-movie text-white mb-4\" >\n        <Card.Img src={el.Poster} alt=\"Card image\" />\n        <div className=\"card-ovr\">\n            <div> <u>Released:</u>{el.Released}  </div>\n             <div> <u>Genre:</u> {el.Genre}</div>\n             <div> <u>Actors:</u> {el.Actors}</div>  \n            <div><u>Awards:</u> {el.Awards} </div> \n      </div>\n      <div className=\" footer-card-movie position-absolute w-100\">\n      <div> {el.Title} </div>\n        <StarRating ratingSer={el.rating} />\n      </div>\n  \n</Card>\n  )\n}","import React ,{useEffect,useState}from 'react';\nimport {useSelector,useDispatch } from \"react-redux\"\nimport { getMovies } from '../../Redux/Reducers/Movies';\nimport { Row,Col } from 'react-bootstrap';\nimport Card from \"./Card/Card\"\n\nexport default function Movies() {\n  const dispatch = useDispatch();\n  const movies = useSelector((state) => state.movies.movies);\n  const loading = useSelector((state) => state.movies.loading);\n  const inputVal = useSelector(state => state.Search.search.inputVal)\n  const ratingVal = useSelector(state => state.Search.search.ratingVal)\n  const [movieFil, setmovieFil] = useState([])\n\n    useEffect(() => {\n    dispatch(getMovies());\n   \n \n let filterMovie= movies.filter(el=> el.Title.toLowerCase().search(inputVal.toLowerCase()) !== -1 && el.rating>=ratingVal)\n\n    setmovieFil(filterMovie)\n\n  }, [dispatch,movies,inputVal,ratingVal]);\n \n \n  return (\n    <section className=\"container\">\n\n<h4 className=\"title-section\">Featured Series</h4>\n\n<Row>\n{movieFil && movieFil.length?\n              movieFil.map(el=>\n                <Col sm={6} md={4} lg={3} key={el.id}>\n                   <Card  el={el}></Card>\n              </Col>\n              ):loading!==false?\n              movies.map(el=>\n                <Col sm={6} md={4} lg={3} key={el.id}>\n                   <Card  el={el}></Card>\n              </Col>\n              ):\n <h1>Loading...</h1>\n          \n           }\n      \n</Row>\n\n    </section>\n  )\n}","import React from 'react';\nimport '../Style/App.css';\nimport NavBar from \"./NavBar/NavBar\"\nimport Banner from \"./Banner/Banner\"\nimport Movies from \"./Movies/ListMovie\"\nexport default function App() {\n\n\n  return (\n    <>\n        <NavBar />\n        <Banner />\n        <Movies />\n\n    </>\n  )\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers} from \"redux\"\n\nimport MoviesReducer from \"./Movies\"\nimport SearchReducer from \"./Search\"\n\nconst rootReducer=combineReducers({\n    movies:MoviesReducer,\n    Search:SearchReducer\n\n})\n\nexport default rootReducer","import axios from \"axios\"\n\nexport function requestGetMovies(params) {\n\n  return axios.request({\n    method: \"get\",\n    url: \"https://my-json-server.typicode.com/ImenMaster/demo/movies\",\n  \n  }); \n\n}","\n/* 2- call our request and return data*/\nimport { call, put } from \"redux-saga/effects\";\nimport { SetMoviesSuccess,getMoviesFailed} from \"../../Reducers/Movies\";\nimport { requestGetMovies } from \"../Requests/Movies\";\n\nexport function* handleGetMovies(action) {\n  try {\n    const response = yield call(requestGetMovies);\n    const { data } = response;\n    yield put(SetMoviesSuccess(data));\n  } catch (error) {\n \n    yield put(getMoviesFailed(error.message));\n\n  }\n}","import { takeLatest } from \"redux-saga/effects\";\nimport { handleGetMovies} from \"./Handlers/Movies\";\nimport { GET_MOVIES_REQUESTED} from \"../Reducers/Movies\";\n\nexport default function* WatcherGetMovies() {\n\n/* Connect Action with HandleGetMovies  function */\n\nyield takeLatest(GET_MOVIES_REQUESTED,handleGetMovies)\n\n\n\n  }\n","import { all } from 'redux-saga/effects'\nimport WatcherGetMovies from './WatcherGetMovies'\n\nexport  function* watcherSaga() {\n  yield all([\n    WatcherGetMovies(),\n  ])\n}","import {createStore,applyMiddleware,compose} from \"redux\"\nimport createSagaMiddleware from \"redux-saga\"\nimport rootReducer from \"./Reducers/index\"\nimport {watcherSaga} from \"./Sagas/WatcherSaga\"\nconst SagaMiddelware = createSagaMiddleware()\nconst MiddleWare =[SagaMiddelware]\nconst store =\n            compose(applyMiddleware(...MiddleWare),\n               // window.__REDUX_DEVTOOLS_EXTENSION__ && \n               // window.__REDUX_DEVTOOLS_EXTENSION__()\n                ) \n            (createStore)(rootReducer)\n\nSagaMiddelware.run(watcherSaga)\n\nexport default  store\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/Main';\nimport reportWebVitals from './reportWebVitals';\nimport Store from \"./Redux/Store\"\nimport {Provider} from \"react-redux\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(\n  <React.StrictMode>\n\n <Provider store ={Store} >\n <App />\n </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}